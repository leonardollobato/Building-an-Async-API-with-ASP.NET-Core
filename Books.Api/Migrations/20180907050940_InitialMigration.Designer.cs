// <auto-generated />
using System;
using Books.Api.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Books.Api.Migrations
{
    [DbContext(typeof(BooksContext))]
    [Migration("20180907050940_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview1-35029");

            modelBuilder.Entity("Books.Api.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new { Id = new Guid("8d7379bb-be72-4acc-8a2f-f04b01fe6339"), FirstName = "George", LastName = "RR Martin" },
                        new { Id = new Guid("eadd5fde-968b-4e5e-b169-15edc4943b4e"), FirstName = "Stephen", LastName = "Fry" },
                        new { Id = new Guid("5b9d3258-a26b-4b65-a3e0-fbb1eeb0be3f"), FirstName = "Jemes", LastName = "Elroy" },
                        new { Id = new Guid("16c75331-90e4-4f55-8446-5bf309242604"), FirstName = "Douglas", LastName = "Adams" }
                    );
                });

            modelBuilder.Entity("Books.Api.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AuthorId");

                    b.Property<string>("Description")
                        .HasMaxLength(2500);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new { Id = new Guid("3fb66003-f81d-424a-9105-ea7dbb498478"), AuthorId = new Guid("8d7379bb-be72-4acc-8a2f-f04b01fe6339"), Description = "The book that seems impossible to write.", Title = "The Winds of Winter" },
                        new { Id = new Guid("48ac625e-d8e7-4f0a-87dc-8ec1a7f289f8"), AuthorId = new Guid("8d7379bb-be72-4acc-8a2f-f04b01fe6339"), Description = "A Game of Thrones is the first novel in a Songs of Ice and Fire", Title = "A Game of Thrones" },
                        new { Id = new Guid("5e77b630-01e8-473c-83b1-d2d7ed7535a2"), AuthorId = new Guid("5b9d3258-a26b-4b65-a3e0-fbb1eeb0be3f"), Description = "The Greek myths are amongst the best stories ever told...", Title = "Mythos" },
                        new { Id = new Guid("f136af59-ba99-4864-930a-3d62de9fed94"), AuthorId = new Guid("16c75331-90e4-4f55-8446-5bf309242604"), Description = "In the Hitchhiker's Guide tot he Galaxy...", Title = "The Hitchhiker's Guide to the Galaxy" }
                    );
                });

            modelBuilder.Entity("Books.Api.Entities.Book", b =>
                {
                    b.HasOne("Books.Api.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
